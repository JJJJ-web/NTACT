[{"C:\\Users\\happyj\\Documents\\GitHub\\NTACT\\kitchen\\src\\index.js":"1","C:\\Users\\happyj\\Documents\\GitHub\\NTACT\\kitchen\\src\\serviceWorker.js":"2","C:\\Users\\happyj\\Documents\\GitHub\\NTACT\\kitchen\\src\\containers\\App\\App.jsx":"3","C:\\Users\\happyj\\Documents\\GitHub\\NTACT\\kitchen\\src\\containers\\App\\ScrollToTop.jsx":"4","C:\\Users\\happyj\\Documents\\GitHub\\NTACT\\kitchen\\src\\containers\\App\\Router.jsx":"5","C:\\Users\\happyj\\Documents\\GitHub\\NTACT\\kitchen\\src\\containers\\App\\MainWrapper.jsx":"6","C:\\Users\\happyj\\Documents\\GitHub\\NTACT\\kitchen\\src\\containers\\Layout\\index.jsx":"7","C:\\Users\\happyj\\Documents\\GitHub\\NTACT\\kitchen\\src\\containers\\LogIn\\index.jsx":"8","C:\\Users\\happyj\\Documents\\GitHub\\NTACT\\kitchen\\src\\containers\\Example\\index.jsx":"9","C:\\Users\\happyj\\Documents\\GitHub\\NTACT\\kitchen\\src\\containers\\Layout\\topbar\\Topbar.jsx":"10","C:\\Users\\happyj\\Documents\\GitHub\\NTACT\\kitchen\\src\\containers\\LogIn\\components\\LogInForm.jsx":"11","C:\\Users\\happyj\\Documents\\GitHub\\NTACT\\kitchen\\src\\containers\\Example\\components\\ExampleCard.jsx":"12","C:\\Users\\happyj\\Documents\\GitHub\\NTACT\\kitchen\\src\\containers\\Layout\\topbar\\TopbarProfile.jsx":"13","C:\\Users\\happyj\\Documents\\GitHub\\NTACT\\kitchen\\src\\shared\\components\\form\\CheckBox.jsx":"14","C:\\Users\\happyj\\Documents\\GitHub\\NTACT\\kitchen\\src\\containers\\Layout\\topbar\\TopbarMenuLink.jsx":"15","C:\\Users\\happyj\\Documents\\GitHub\\NTACT\\kitchen\\src\\Kitchen\\index.js":"16","C:\\Users\\happyj\\Documents\\GitHub\\NTACT\\kitchen\\src\\Kitchen\\components\\Tabs.js":"17","C:\\Users\\happyj\\Documents\\GitHub\\NTACT\\kitchen\\src\\Kitchen\\components\\List.js":"18","C:\\Users\\happyj\\Documents\\GitHub\\NTACT\\kitchen\\src\\Kitchen\\components\\SituationManage.js":"19","C:\\Users\\happyj\\Documents\\GitHub\\NTACT\\kitchen\\src\\SocketInfo.js":"20"},{"size":497,"mtime":1614746332000,"results":"21","hashOfConfig":"22"},{"size":5301,"mtime":1614746332000,"results":"23","hashOfConfig":"22"},{"size":1344,"mtime":1618614379129,"results":"24","hashOfConfig":"22"},{"size":498,"mtime":1614746332000,"results":"25","hashOfConfig":"22"},{"size":702,"mtime":1618614904477,"results":"26","hashOfConfig":"22"},{"size":307,"mtime":1618612442540,"results":"27","hashOfConfig":"22"},{"size":694,"mtime":1618613129630,"results":"28","hashOfConfig":"22"},{"size":1428,"mtime":1618614801549,"results":"29","hashOfConfig":"22"},{"size":395,"mtime":1614746332000,"results":"30","hashOfConfig":"22"},{"size":487,"mtime":1618612068588,"results":"31","hashOfConfig":"22"},{"size":2431,"mtime":1618614841874,"results":"32","hashOfConfig":"22"},{"size":417,"mtime":1614746332000,"results":"33","hashOfConfig":"22"},{"size":1388,"mtime":1614746332000,"results":"34","hashOfConfig":"22"},{"size":2573,"mtime":1614746332000,"results":"35","hashOfConfig":"22"},{"size":505,"mtime":1614746332000,"results":"36","hashOfConfig":"22"},{"size":172,"mtime":1618613986398,"results":"37","hashOfConfig":"22"},{"size":1239,"mtime":1618614016738,"results":"38","hashOfConfig":"22"},{"size":7765,"mtime":1618614438864,"results":"39","hashOfConfig":"22"},{"size":4381,"mtime":1618614427281,"results":"40","hashOfConfig":"22"},{"size":130,"mtime":1618168452000,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"16uv09c",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\happyj\\Documents\\GitHub\\NTACT\\kitchen\\src\\index.js",[],["87","88","89","90","91","92","93"],"C:\\Users\\happyj\\Documents\\GitHub\\NTACT\\kitchen\\src\\serviceWorker.js",[],"C:\\Users\\happyj\\Documents\\GitHub\\NTACT\\kitchen\\src\\containers\\App\\App.jsx",["94"],"import React, { useEffect, useState } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '../../scss/app.scss';\nimport Router from './Router';\nimport ScrollToTop from './ScrollToTop';\nimport socket from '../../SocketInfo';\n\nconst App = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    window.addEventListener('load', () => {\n      setIsLoading(false);\n      setTimeout(() => setIsLoaded(true), 500);\n    });\n  }, []);\n\n  socket.on('connect', () => {\n    console.log('connection server');\n    if (sessionStorage.getItem('userInfo') != null) {\n      socket.emit('A', {\n        userID: JSON.parse(sessionStorage.getItem('userInfo')).userId,\n        socketID: socket.id,\n      });\n    }\n  });\n\n  return (\n    <BrowserRouter>\n      <ScrollToTop>\n        {!isLoaded && (\n          <div className={`load${isLoading ? '' : ' loaded'}`}>\n            <div className=\"load__icon-wrap\">\n              <svg className=\"load__icon\">\n                <path fill=\"#4ce1b6\" d=\"M12,4V2A10,10 0 0,0 2,12H4A8,8 0 0,1 12,4Z\" />\n              </svg>\n            </div>\n          </div>\n        )}\n        <div>\n          <Router />\n        </div>\n      </ScrollToTop>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","C:\\Users\\happyj\\Documents\\GitHub\\NTACT\\kitchen\\src\\containers\\App\\ScrollToTop.jsx",[],"C:\\Users\\happyj\\Documents\\GitHub\\NTACT\\kitchen\\src\\containers\\App\\Router.jsx",[],"C:\\Users\\happyj\\Documents\\GitHub\\NTACT\\kitchen\\src\\containers\\App\\MainWrapper.jsx",[],"C:\\Users\\happyj\\Documents\\GitHub\\NTACT\\kitchen\\src\\containers\\Layout\\index.jsx",[],"C:\\Users\\happyj\\Documents\\GitHub\\NTACT\\kitchen\\src\\containers\\LogIn\\index.jsx",[],"C:\\Users\\happyj\\Documents\\GitHub\\NTACT\\kitchen\\src\\containers\\Example\\index.jsx",[],["95","96","97","98","99","100","101"],"C:\\Users\\happyj\\Documents\\GitHub\\NTACT\\kitchen\\src\\containers\\Layout\\topbar\\Topbar.jsx",[],"C:\\Users\\happyj\\Documents\\GitHub\\NTACT\\kitchen\\src\\containers\\LogIn\\components\\LogInForm.jsx",[],"C:\\Users\\happyj\\Documents\\GitHub\\NTACT\\kitchen\\src\\containers\\Example\\components\\ExampleCard.jsx",[],"C:\\Users\\happyj\\Documents\\GitHub\\NTACT\\kitchen\\src\\containers\\Layout\\topbar\\TopbarProfile.jsx",[],"C:\\Users\\happyj\\Documents\\GitHub\\NTACT\\kitchen\\src\\shared\\components\\form\\CheckBox.jsx",[],"C:\\Users\\happyj\\Documents\\GitHub\\NTACT\\kitchen\\src\\containers\\Layout\\topbar\\TopbarMenuLink.jsx",[],"C:\\Users\\happyj\\Documents\\GitHub\\NTACT\\kitchen\\src\\Kitchen\\index.js",[],"C:\\Users\\happyj\\Documents\\GitHub\\NTACT\\kitchen\\src\\Kitchen\\components\\Tabs.js",[],"C:\\Users\\happyj\\Documents\\GitHub\\NTACT\\kitchen\\src\\Kitchen\\components\\List.js",["102","103","104","105","106","107","108","109"],"import React, { useState } from 'react';\r\nimport {\r\n  Card, Button, Select, List, Popconfirm, message,\r\n} from 'antd';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport SituationManage from './SituationManage';\r\nimport socket from '../../SocketInfo';\r\n\r\nfunction ShopList(props) {\r\n  const { Option } = Select;\r\n  const [data, setData] = useState([]);\r\n  // eslint-disable-next-line react/destructuring-assignment\r\n  const [status, setStatus] = useState(props.status);\r\n  const [value, setValue] = useState(10);\r\n  const text = '해당 주문을 취소하겠습니까?';\r\n\r\n  async function getList() {\r\n    axios\r\n      .get(`/api/orders/${status}`)\r\n      .then((res) => setData(res.data.reverse()));\r\n  }\r\n\r\n  useState(() => {\r\n    // 역순 출력\r\n    socket.on('G', () => {\r\n      alert('실시간 주문 접수 이벤트 G 수신');\r\n      getList();\r\n    });\r\n    getList();\r\n  }, []);\r\n\r\n  // eslint-disable-next-line consistent-return\r\n  function changeStatus(item) {\r\n    // 주문 진행 상태 변경\r\n    if (item.order_stat === 'ready') {\r\n      return 'in-progress';\r\n    } if (item.order_stat === 'in-progress') {\r\n      return 'completed';\r\n    }\r\n  }\r\n\r\n  async function changeStateHandler(item) {\r\n    // <> server 주문 진행 상태 변경\r\n    await axios\r\n      .patch(`/api/orders/${item.id}`, {\r\n        headers: {\r\n          status: changeStatus(item),\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          socket.emit('B', { userID: item.buyer_id });\r\n          getList();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  async function cancelPay(item) {\r\n    // 주문 취소 <> server\r\n    await axios({\r\n      url: '/api/payments/cancel',\r\n      method: 'POST',\r\n      headers: {},\r\n      data: {\r\n        merchant_uid: item.id,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          message.success('주문이 취소되었습니다.');\r\n          axios\r\n            .patch(`/api/orders/${item.id}`, {\r\n              // 주문 취소: server에 주문 상태 변경\r\n              headers: {\r\n                status: 'canceled',\r\n              },\r\n            })\r\n            .then((res) => {\r\n              if (res.status === 200) {\r\n                getList();\r\n              }\r\n            })\r\n            .catch((error) => {\r\n              console.log(error);\r\n            });\r\n        } else if (res.status === 400) {\r\n          console.log(res);\r\n          message.success('유효하지 않은 요청입니다.');\r\n        } else {\r\n          console.log(res);\r\n          alert('환불 실패');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        alert('환불 실패');\r\n      });\r\n  }\r\n\r\n  function canceledMenu(item) {\r\n    // 주문 취소 및 환불\r\n    if (item.order_stat === 'ready') {\r\n      cancelPay(item);\r\n    } else {\r\n      message.warning('조리 중에는 주문을 취소할 수 없습니다.');\r\n    }\r\n  }\r\n\r\n  // eslint-disable-next-line consistent-return\r\n  function formatDate(date) {\r\n    if (date !== undefined) {\r\n      const time = new Date(date);\r\n      let h = time.getHours();\r\n      const ampm = h >= 12 ? '오후 ' : '오전 ';\r\n      h = h >= 12 ? (h -= 12) : h;\r\n      let m = time.getMinutes();\r\n      m = m >= 10 ? m : `0${m}`;\r\n      const s = time.getSeconds();\r\n      return `${ampm + h}시 ${m}분`;\r\n    }\r\n  }\r\n\r\n  function convertOrderType(type) {\r\n    if (type === 'dine-in') {\r\n      return '테이블';\r\n    } if (type === 'pick-up') {\r\n      return '포장';\r\n    }\r\n    return '-';\r\n  }\r\n\r\n  function colorOrderType(type) {\r\n    if (type === 'dine-in') {\r\n      return '#fda200';\r\n    } if (type === 'pick-up') {\r\n      return '#87bd00';\r\n    }\r\n    return '#8b8b8b';\r\n  }\r\n  function checkOrderStat(stat) {\r\n    if (stat === 'ready' || stat === 'in-progress') {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  function returnStat(stat) {\r\n    if (stat === 'ready') {\r\n      return '조리 시작';\r\n    } if (stat === 'in-progress') {\r\n      return '조리 완료';\r\n    }\r\n    return '완료';\r\n  }\r\n  function chectStatReady(stat) {\r\n    if (stat === 'ready') {\r\n      return 'visible';\r\n    }\r\n    return 'hidden';\r\n  }\r\n  return (\r\n    <>\r\n      <DivList>\r\n        {data.map((item, index) => (\r\n          // eslint-disable-next-line react/no-array-index-key\r\n          <div className=\"cardList\" key={index}>\r\n            <Card\r\n              title={item.id}\r\n              style={{ width: 300 }}\r\n              className=\"items\"\r\n              bodyStyle={{ height: 500 }}\r\n              headStyle={{ fontSize: 20 }}\r\n            >\r\n              <div>\r\n                <b\r\n                  className=\"order_type\"\r\n                  style={{ color: colorOrderType(item.order_type) }}\r\n                >\r\n                  {convertOrderType(item.order_type)}\r\n                </b>\r\n                <span className=\"date\">{formatDate(item.date)}</span>\r\n                <div>\r\n                  <Popconfirm\r\n                    onConfirm={() => canceledMenu(item)}\r\n                    title={text}\r\n                    okText=\"확인\"\r\n                    cancelText=\"닫기\"\r\n                    className=\"reject\"\r\n                  >\r\n                    <Button\r\n                      style={{ visibility: chectStatReady(item.order_stat) }}\r\n                      danger\r\n                      type=\"primary\"\r\n                    >\r\n                      주문 취소\r\n                    </Button>\r\n                  </Popconfirm>\r\n                </div>\r\n                <hr />\r\n                <List itemLayout=\"vertical\">\r\n                  {item.order_detail.map((order, index) => (\r\n                    // eslint-disable-next-line react/no-array-index-key\r\n                    <List.Item key={index}>\r\n                      <span className=\"menu\">{order.Name}</span>\r\n                      <b className=\"quantity\">{order.Quantity}</b>\r\n                    </List.Item>\r\n                  ))}\r\n                </List>\r\n                <div className=\"select\">\r\n                  <Select\r\n                    defaultValue={10}\r\n                    onChange={(e) => setValue(e)}\r\n                    style={{\r\n                      width: 105,\r\n                      visibility: chectStatReady(item.order_stat),\r\n                    }}\r\n                  >\r\n                    <Option value={5}>5</Option>\r\n                    <Option value={10}>10</Option>\r\n                    <Option value={15}>15</Option>\r\n                    <Option value={20}>20</Option>\r\n                  </Select>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    disabled={checkOrderStat(item.order_stat)}\r\n                    className=\"Button\"\r\n                    onClick={() => changeStateHandler(item)}\r\n                  >\r\n                    {returnStat(item.order_stat)}\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </Card>\r\n          </div>\r\n        ))}\r\n      </DivList>\r\n      <SituationManage />\r\n    </>\r\n  );\r\n}\r\n\r\nconst DivList = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  overflow-x: auto;\r\n  white-space: nowrap;\r\n  height: 600px;\r\n\r\n  .order_type {\r\n    font-size: 2rem;\r\n  }\r\n\r\n  .reject {\r\n    left: 50%;\r\n  }\r\n\r\n  .date {\r\n    position: relative;\r\n    left: 10px;\r\n    color: #0062ff;\r\n    font-size: 1rem;\r\n  }\r\n\r\n  .menu {\r\n    font-size: 1.1rem;\r\n  }\r\n\r\n  .quantity {\r\n    position: absolute;\r\n    right: 10px;\r\n    font-size: 1.3rem;\r\n  }\r\n  .select {\r\n    position: absolute;\r\n    bottom: 30px;\r\n  }\r\n  Button {\r\n    margin-left: 25px;\r\n  }\r\n`;\r\n\r\nexport default ShopList;\r\n","C:\\Users\\happyj\\Documents\\GitHub\\NTACT\\kitchen\\src\\Kitchen\\components\\SituationManage.js",["110","111"],"import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Modal, Button, Form, Switch, Col, Row, Select, message, \r\n} from 'antd';\r\nimport socket from '../../SocketInfo';\r\n\r\nconst { Option } = Select;\r\n\r\nfunction SituationManage() {\r\n  const [visible, setVisible] = useState(false);\r\n  const [products, setProducts] = useState([]);\r\n  const [selectDisabled, setSelectDisabled] = useState(true);\r\n\r\n  const onCreate = (values) => {\r\n    console.log('수정 Received values of form: ', values);\r\n    setVisible(false);\r\n  };\r\n\r\n  async function soldoutMenuClickHandler(product) {\r\n    await axios.patch(`/api/menus/status/${product.id}`, {}).then((res) => {\r\n      if (res.status === 200) {\r\n        socket.emit('D');\r\n        message.success(`${product.menu_kor} 의 판매 상태가 변경되었습니다.`);\r\n      } else {\r\n        // window.alert('토글 실패111');\r\n      }\r\n    });\r\n  }\r\n\r\n  function getMenuSituation() {\r\n    axios.get('/api/menus?category=true').then((res) => {\r\n      setProducts(res.data);\r\n      setVisible(true);\r\n    });\r\n  }\r\n\r\n  async function changeDelay(value, product) {\r\n    await axios\r\n      .patch(`/api/menus/delaytime/${product.id}`, {\r\n        headers: {\r\n          delaytime: value,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          socket.emit('D');\r\n          message.success(`${product.menu_kor} 의 지연시간이 변경되었습니다.`);\r\n        } else {\r\n        // window.alert('토글 실패111');\r\n        }\r\n      });\r\n  }\r\n\r\n  // eslint-disable-next-line no-shadow,react/prop-types\r\n  function CollectionCreateForm({ visible, onCreate, onCancel }) {\r\n    const [form] = Form.useForm();\r\n    return (\r\n      <Modal\r\n        visible={visible}\r\n        title=\"메뉴 관리\"\r\n        okText=\"적용\"\r\n        cancelText=\"취소\"\r\n        onCancel={onCancel}\r\n        onOk={() => {\r\n          form\r\n            .validateFields()\r\n            .then((values) => {\r\n              form.resetFields();\r\n              onCreate(values);\r\n              onCancel();\r\n            })\r\n            .catch((info) => {\r\n              console.log('Validate Failed:', info);\r\n            });\r\n        }}\r\n      >\r\n        <Form\r\n          form={form}\r\n          layout=\"vertical\"\r\n          name=\"form_in_modal\"\r\n          initialValues={{\r\n            modifier: 'public',\r\n          }}\r\n        >\r\n          {products.map((product, index) => (\r\n            <Row key={product.id} justify=\"space-around\" gutter={[10, 20]}>\r\n              <Col span={4}>\r\n                <span>{product.category_kor}</span>\r\n              </Col>\r\n              <Col span={10}>\r\n                <span>{product.menu_kor}</span>\r\n              </Col>\r\n              <Col span={4}>\r\n                <Switch\r\n                  checkedChildren=\"판매중\"\r\n                  unCheckedChildren=\"품절\"\r\n                  style={{ width: '4.5rem' }}\r\n                  onChange={() => soldoutMenuClickHandler(product)}\r\n                  /* eslint-disable-next-line eqeqeq */\r\n                  defaultChecked={product.sales_stat == true}\r\n                />\r\n              </Col>\r\n              <Col span={6}>\r\n                <Select\r\n                  defaultValue={\r\n                    product.delay_time === 0\r\n                      ? '정상 판매'\r\n                      : `${product.delay_time}분 지연`\r\n                  }\r\n                  style={{ width: 120 }}\r\n                  onChange={(e) => changeDelay(e, product)}\r\n                >\r\n                  <Option value=\"0\">정상 판매</Option>\r\n                  <Option value=\"10\">10분 지연</Option>\r\n                  <Option value=\"20\">20분 지연</Option>\r\n                  <Option value=\"30\">30분 지연</Option>\r\n                  <Option value=\"40\">40분 지연</Option>\r\n                </Select>\r\n              </Col>\r\n            </Row>\r\n          ))}\r\n        </Form>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        type=\"primary\"\r\n        onClick={() => {\r\n          getMenuSituation();\r\n        }}\r\n      >\r\n        메뉴 상황 실시간 관리\r\n      </Button>\r\n      <CollectionCreateForm\r\n        visible={visible}\r\n        onCreate={onCreate}\r\n        onCancel={() => {\r\n          setVisible(false);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SituationManage;\r\n","C:\\Users\\happyj\\Documents\\GitHub\\NTACT\\kitchen\\src\\SocketInfo.js",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":21,"column":5,"nodeType":"128","messageId":"129","endLine":21,"endColumn":16},{"ruleId":"112","replacedBy":"130"},{"ruleId":"114","replacedBy":"131"},{"ruleId":"116","replacedBy":"132"},{"ruleId":"118","replacedBy":"133"},{"ruleId":"120","replacedBy":"134"},{"ruleId":"122","replacedBy":"135"},{"ruleId":"124","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":27,"column":7,"nodeType":"139","messageId":"129","endLine":27,"endColumn":34},{"ruleId":"126","severity":1,"message":"127","line":58,"column":9,"nodeType":"128","messageId":"129","endLine":58,"endColumn":20},{"ruleId":"126","severity":1,"message":"127","line":88,"column":15,"nodeType":"128","messageId":"129","endLine":88,"endColumn":26},{"ruleId":"126","severity":1,"message":"127","line":91,"column":11,"nodeType":"128","messageId":"129","endLine":91,"endColumn":22},{"ruleId":"126","severity":1,"message":"127","line":94,"column":11,"nodeType":"128","messageId":"129","endLine":94,"endColumn":22},{"ruleId":"137","severity":1,"message":"138","line":95,"column":11,"nodeType":"139","messageId":"129","endLine":95,"endColumn":25},{"ruleId":"126","severity":1,"message":"127","line":99,"column":9,"nodeType":"128","messageId":"129","endLine":99,"endColumn":20},{"ruleId":"137","severity":1,"message":"138","line":100,"column":9,"nodeType":"139","messageId":"129","endLine":100,"endColumn":23},{"ruleId":"126","severity":1,"message":"127","line":16,"column":5,"nodeType":"128","messageId":"129","endLine":16,"endColumn":16},{"ruleId":"126","severity":1,"message":"127","line":74,"column":15,"nodeType":"128","messageId":"129","endLine":74,"endColumn":26},"jsx-a11y/label-has-for",[],"lines-around-directive",["140"],"no-spaced-func",["141"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected",[],["140"],["141"],[],[],[],[],"no-alert","Unexpected alert.","CallExpression","padding-line-between-statements","func-call-spacing"]